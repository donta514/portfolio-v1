---
import Card from "./Card.astro";
---

<Card>
  <div class="themeToggleCard">
    <button id="themeToggle" aria-label="Toggle theme">
      <svg width="25px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <!-- Sun Icon -->
        <path
          id="sunIcon"
          fill="white"
          d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
        ></path>
        <!-- Moon Icon -->
        <path
          id="moonIcon"
          fill="transparent"
          d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
        ></path>
      </svg>
    </button>
  </div>
</Card>

<style>
  .themeToggleCard {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #0d1117;
    width: 100%;
    cursor: pointer;
    border-radius: var(--border-radius);
    /* padding: var(--padding); */

    #themeToggle {
      border: none;
      background: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: transform 0.3s ease-in-out;

      .theme-transition {
        transform: rotate(180deg);
      }
    }

    svg {
      transition: fill 0.3s ease-in-out;
    }
  }
  .themeToggleCard:hover {
    transform: scale(1.1);
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggleButton = document.getElementById("themeToggle");
    const sunIcon = document.getElementById("sunIcon");
    const moonIcon = document.getElementById("moonIcon");

    const applyIconState = (isDark) => {
      moonIcon.setAttribute("fill", isDark ? "transparent" : "white");
      sunIcon.setAttribute("fill", isDark ? "white" : "transparent");
    };

    // Set initial state based on saved theme
    const isDark =
      document.documentElement.getAttribute("data-theme") === "dark";
    applyIconState(isDark);

    themeToggleButton.addEventListener("click", () => {
      const isCurrentlyDark =
        document.documentElement.getAttribute("data-theme") === "dark";
      const newTheme = isCurrentlyDark ? "light" : "dark";

      document.documentElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);

      applyIconState(!isCurrentlyDark);

      // Apply rotation animation
      themeToggleButton.classList.add("theme-transition");
      setTimeout(
        () => themeToggleButton.classList.remove("theme-transition"),
        300
      );
    });
  });
</script>
